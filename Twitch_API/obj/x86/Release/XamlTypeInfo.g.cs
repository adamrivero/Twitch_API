//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Twitch_API
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        private global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace Twitch_API.Twitch_API_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Twitch_API.Twitch_API_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Twitch_API.Twitch_API_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[38];
            _typeNameTable[0] = "Twitch_API.ViewModel.MainViewModel";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "String";
            _typeNameTable[3] = "System.Collections.ObjectModel.ObservableCollection`1<Twitch_API.Model.TopGamesModel>";
            _typeNameTable[4] = "System.Collections.ObjectModel.Collection`1<Twitch_API.Model.TopGamesModel>";
            _typeNameTable[5] = "Twitch_API.Model.TopGamesModel";
            _typeNameTable[6] = "System.Collections.Generic.List`1<Twitch_API.Model.TopGamesModel.Datum>";
            _typeNameTable[7] = "Twitch_API.Model.TopGamesModel.Datum";
            _typeNameTable[8] = "Twitch_API.Model.TopGamesModel.Pagination";
            _typeNameTable[9] = "System.Collections.ObjectModel.ObservableCollection`1<Twitch_API.Model.StreamModel>";
            _typeNameTable[10] = "System.Collections.ObjectModel.Collection`1<Twitch_API.Model.StreamModel>";
            _typeNameTable[11] = "Twitch_API.Model.StreamModel";
            _typeNameTable[12] = "System.Collections.Generic.List`1<Twitch_API.Model.Datum>";
            _typeNameTable[13] = "Twitch_API.Model.Datum";
            _typeNameTable[14] = "Int32";
            _typeNameTable[15] = "System.DateTime";
            _typeNameTable[16] = "System.ValueType";
            _typeNameTable[17] = "System.Collections.Generic.List`1<String>";
            _typeNameTable[18] = "System.Windows.Input.ICommand";
            _typeNameTable[19] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[20] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[21] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[22] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[23] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[24] = "Microsoft.Xaml.Interactivity.Trigger";
            _typeNameTable[25] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[26] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[27] = "Microsoft.Xaml.Interactions.Core.CallMethodAction";
            _typeNameTable[28] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[29] = "Windows.UI.Xaml.Data.IValueConverter";
            _typeNameTable[30] = "Twitch_API.View.MainView";
            _typeNameTable[31] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[32] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[33] = "Twitch_API.ViewModel.MediaViewModel";
            _typeNameTable[34] = "Twitch_API.Model.MediaModel";
            _typeNameTable[35] = "Twitch_API.View.MediaView";
            _typeNameTable[36] = "Twitch_API.ViewModel.SearchViewModel";
            _typeNameTable[37] = "Twitch_API.View.SearchView";

            _typeTable = new global::System.Type[38];
            _typeTable[0] = typeof(global::Twitch_API.ViewModel.MainViewModel);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::System.String);
            _typeTable[3] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Twitch_API.Model.TopGamesModel>);
            _typeTable[4] = typeof(global::System.Collections.ObjectModel.Collection<global::Twitch_API.Model.TopGamesModel>);
            _typeTable[5] = typeof(global::Twitch_API.Model.TopGamesModel);
            _typeTable[6] = typeof(global::System.Collections.Generic.List<global::Twitch_API.Model.TopGamesModel.Datum>);
            _typeTable[7] = typeof(global::Twitch_API.Model.TopGamesModel.Datum);
            _typeTable[8] = typeof(global::Twitch_API.Model.TopGamesModel.Pagination);
            _typeTable[9] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Twitch_API.Model.StreamModel>);
            _typeTable[10] = typeof(global::System.Collections.ObjectModel.Collection<global::Twitch_API.Model.StreamModel>);
            _typeTable[11] = typeof(global::Twitch_API.Model.StreamModel);
            _typeTable[12] = typeof(global::System.Collections.Generic.List<global::Twitch_API.Model.Datum>);
            _typeTable[13] = typeof(global::Twitch_API.Model.Datum);
            _typeTable[14] = typeof(global::System.Int32);
            _typeTable[15] = typeof(global::System.DateTime);
            _typeTable[16] = typeof(global::System.ValueType);
            _typeTable[17] = typeof(global::System.Collections.Generic.List<global::System.String>);
            _typeTable[18] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[19] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[20] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[22] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[23] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[24] = typeof(global::Microsoft.Xaml.Interactivity.Trigger);
            _typeTable[25] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[26] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[27] = typeof(global::Microsoft.Xaml.Interactions.Core.CallMethodAction);
            _typeTable[28] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Data.IValueConverter);
            _typeTable[30] = typeof(global::Twitch_API.View.MainView);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[32] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[33] = typeof(global::Twitch_API.ViewModel.MediaViewModel);
            _typeTable[34] = typeof(global::Twitch_API.Model.MediaModel);
            _typeTable[35] = typeof(global::Twitch_API.View.MediaView);
            _typeTable[36] = typeof(global::Twitch_API.ViewModel.SearchViewModel);
            _typeTable[37] = typeof(global::Twitch_API.View.SearchView);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_MainViewModel() { return new global::Twitch_API.ViewModel.MainViewModel(); }
        private object Activate_3_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Twitch_API.Model.TopGamesModel>(); }
        private object Activate_4_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Twitch_API.Model.TopGamesModel>(); }
        private object Activate_5_TopGamesModel() { return new global::Twitch_API.Model.TopGamesModel(); }
        private object Activate_6_List() { return new global::System.Collections.Generic.List<global::Twitch_API.Model.TopGamesModel.Datum>(); }
        private object Activate_9_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Twitch_API.Model.StreamModel>(); }
        private object Activate_10_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Twitch_API.Model.StreamModel>(); }
        private object Activate_11_StreamModel() { return new global::Twitch_API.Model.StreamModel(); }
        private object Activate_12_List() { return new global::System.Collections.Generic.List<global::Twitch_API.Model.Datum>(); }
        private object Activate_13_Datum() { return new global::Twitch_API.Model.Datum(); }
        private object Activate_17_List() { return new global::System.Collections.Generic.List<global::System.String>(); }
        private object Activate_20_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_23_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_26_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_27_CallMethodAction() { return new global::Microsoft.Xaml.Interactions.Core.CallMethodAction(); }
        private object Activate_28_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_30_MainView() { return new global::Twitch_API.View.MainView(); }
        private object Activate_33_MediaViewModel() { return new global::Twitch_API.ViewModel.MediaViewModel(); }
        private object Activate_34_MediaModel() { return new global::Twitch_API.Model.MediaModel(); }
        private object Activate_35_MediaView() { return new global::Twitch_API.View.MediaView(); }
        private object Activate_36_SearchViewModel() { return new global::Twitch_API.ViewModel.SearchViewModel(); }
        private object Activate_37_SearchView() { return new global::Twitch_API.View.SearchView(); }
        private void VectorAdd_3_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Twitch_API.Model.TopGamesModel>)instance;
            var newItem = (global::Twitch_API.Model.TopGamesModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_4_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Twitch_API.Model.TopGamesModel>)instance;
            var newItem = (global::Twitch_API.Model.TopGamesModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_6_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Twitch_API.Model.TopGamesModel.Datum>)instance;
            var newItem = (global::Twitch_API.Model.TopGamesModel.Datum)item;
            collection.Add(newItem);
        }
        private void VectorAdd_9_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Twitch_API.Model.StreamModel>)instance;
            var newItem = (global::Twitch_API.Model.StreamModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_10_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Twitch_API.Model.StreamModel>)instance;
            var newItem = (global::Twitch_API.Model.StreamModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_12_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Twitch_API.Model.Datum>)instance;
            var newItem = (global::Twitch_API.Model.Datum)item;
            collection.Add(newItem);
        }
        private void VectorAdd_17_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_26_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Twitch_API.ViewModel.MainViewModel
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_MainViewModel;
                userType.AddMemberName("SearchParam");
                userType.AddMemberName("topGameModels");
                userType.AddMemberName("streamModels");
                userType.AddMemberName("SearchCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  String
                xamlType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  System.Collections.ObjectModel.ObservableCollection`1<Twitch_API.Model.TopGamesModel>
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Twitch_API.Model.TopGamesModel>"));
                userType.CollectionAdd = VectorAdd_3_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  System.Collections.ObjectModel.Collection`1<Twitch_API.Model.TopGamesModel>
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_Collection;
                userType.CollectionAdd = VectorAdd_4_Collection;
                xamlType = userType;
                break;

            case 5:   //  Twitch_API.Model.TopGamesModel
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_TopGamesModel;
                userType.AddMemberName("data");
                userType.AddMemberName("pagination");
                userType.AddMemberName("Id");
                userType.AddMemberName("Name");
                userType.AddMemberName("Box_art_url");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  System.Collections.Generic.List`1<Twitch_API.Model.TopGamesModel.Datum>
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_6_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  Twitch_API.Model.TopGamesModel.Datum
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("id");
                userType.AddMemberName("name");
                userType.AddMemberName("box_art_url");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Twitch_API.Model.TopGamesModel.Pagination
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  System.Collections.ObjectModel.ObservableCollection`1<Twitch_API.Model.StreamModel>
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Twitch_API.Model.StreamModel>"));
                userType.CollectionAdd = VectorAdd_9_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  System.Collections.ObjectModel.Collection`1<Twitch_API.Model.StreamModel>
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_Collection;
                userType.CollectionAdd = VectorAdd_10_Collection;
                xamlType = userType;
                break;

            case 11:   //  Twitch_API.Model.StreamModel
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_StreamModel;
                userType.AddMemberName("data");
                userType.AddMemberName("Game_name");
                userType.AddMemberName("Id");
                userType.AddMemberName("User_name");
                userType.AddMemberName("Viewer_count");
                userType.AddMemberName("Thumbnail_url");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  System.Collections.Generic.List`1<Twitch_API.Model.Datum>
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_12_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  Twitch_API.Model.Datum
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_Datum;
                userType.AddMemberName("id");
                userType.AddMemberName("user_id");
                userType.AddMemberName("user_name");
                userType.AddMemberName("game_id");
                userType.AddMemberName("type");
                userType.AddMemberName("title");
                userType.AddMemberName("viewer_count");
                userType.AddMemberName("started_at");
                userType.AddMemberName("language");
                userType.AddMemberName("thumbnail_url");
                userType.AddMemberName("tag_ids");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  Int32
                xamlType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  System.DateTime
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  System.ValueType
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 17:   //  System.Collections.Generic.List`1<String>
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_17_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  System.Windows.Input.ICommand
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 20:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_20_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger"));
                userType.Activator = Activate_23_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                xamlType = userType;
                break;

            case 24:   //  Microsoft.Xaml.Interactivity.Trigger
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("Actions");
                xamlType = userType;
                break;

            case 25:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 26:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_26_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  Microsoft.Xaml.Interactions.Core.CallMethodAction
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_27_CallMethodAction;
                userType.AddMemberName("MethodName");
                userType.AddMemberName("TargetObject");
                xamlType = userType;
                break;

            case 28:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_28_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 29:   //  Windows.UI.Xaml.Data.IValueConverter
                xamlType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Twitch_API.View.MainView
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_MainView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  Twitch_API.ViewModel.MediaViewModel
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_MediaViewModel;
                userType.AddMemberName("Login");
                userType.AddMemberName("SelectedMedia");
                userType.AddMemberName("HomeCommand");
                userType.AddMemberName("StartRecordCommand");
                userType.AddMemberName("StopRecordCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  Twitch_API.Model.MediaModel
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Twitch_API.View.MediaView
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_MediaView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  Twitch_API.ViewModel.SearchViewModel
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_36_SearchViewModel;
                userType.AddMemberName("streamModels");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  Twitch_API.View.SearchView
                userType = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_SearchView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_MainViewModel_SearchParam(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MainViewModel)instance;
            return that.SearchParam;
        }
        private void set_0_MainViewModel_SearchParam(object instance, object Value)
        {
            var that = (global::Twitch_API.ViewModel.MainViewModel)instance;
            that.SearchParam = (global::System.String)Value;
        }
        private object get_1_MainViewModel_topGameModels(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MainViewModel)instance;
            return that.topGameModels;
        }
        private object get_2_TopGamesModel_data(object instance)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            return that.data;
        }
        private void set_2_TopGamesModel_data(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            that.data = (global::System.Collections.Generic.List<global::Twitch_API.Model.TopGamesModel.Datum>)Value;
        }
        private object get_3_Datum_id(object instance)
        {
            var that = (global::Twitch_API.Model.TopGamesModel.Datum)instance;
            return that.id;
        }
        private void set_3_Datum_id(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.TopGamesModel.Datum)instance;
            that.id = (global::System.String)Value;
        }
        private object get_4_Datum_name(object instance)
        {
            var that = (global::Twitch_API.Model.TopGamesModel.Datum)instance;
            return that.name;
        }
        private void set_4_Datum_name(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.TopGamesModel.Datum)instance;
            that.name = (global::System.String)Value;
        }
        private object get_5_Datum_box_art_url(object instance)
        {
            var that = (global::Twitch_API.Model.TopGamesModel.Datum)instance;
            return that.box_art_url;
        }
        private void set_5_Datum_box_art_url(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.TopGamesModel.Datum)instance;
            that.box_art_url = (global::System.String)Value;
        }
        private object get_6_TopGamesModel_pagination(object instance)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            return that.pagination;
        }
        private void set_6_TopGamesModel_pagination(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            that.pagination = (global::Twitch_API.Model.TopGamesModel.Pagination)Value;
        }
        private object get_7_TopGamesModel_Id(object instance)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            return that.Id;
        }
        private void set_7_TopGamesModel_Id(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_8_TopGamesModel_Name(object instance)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            return that.Name;
        }
        private void set_8_TopGamesModel_Name(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_9_TopGamesModel_Box_art_url(object instance)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            return that.Box_art_url;
        }
        private void set_9_TopGamesModel_Box_art_url(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.TopGamesModel)instance;
            that.Box_art_url = (global::System.String)Value;
        }
        private object get_10_MainViewModel_streamModels(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MainViewModel)instance;
            return that.streamModels;
        }
        private object get_11_StreamModel_data(object instance)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            return that.data;
        }
        private void set_11_StreamModel_data(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            that.data = (global::System.Collections.Generic.List<global::Twitch_API.Model.Datum>)Value;
        }
        private object get_12_Datum_id(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.id;
        }
        private void set_12_Datum_id(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.id = (global::System.String)Value;
        }
        private object get_13_Datum_user_id(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.user_id;
        }
        private void set_13_Datum_user_id(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.user_id = (global::System.String)Value;
        }
        private object get_14_Datum_user_name(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.user_name;
        }
        private void set_14_Datum_user_name(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.user_name = (global::System.String)Value;
        }
        private object get_15_Datum_game_id(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.game_id;
        }
        private void set_15_Datum_game_id(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.game_id = (global::System.Int32)Value;
        }
        private object get_16_Datum_type(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.type;
        }
        private void set_16_Datum_type(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.type = (global::System.String)Value;
        }
        private object get_17_Datum_title(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.title;
        }
        private void set_17_Datum_title(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.title = (global::System.String)Value;
        }
        private object get_18_Datum_viewer_count(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.viewer_count;
        }
        private void set_18_Datum_viewer_count(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.viewer_count = (global::System.Int32)Value;
        }
        private object get_19_Datum_started_at(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.started_at;
        }
        private void set_19_Datum_started_at(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.started_at = (global::System.DateTime)Value;
        }
        private object get_20_Datum_language(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.language;
        }
        private void set_20_Datum_language(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.language = (global::System.String)Value;
        }
        private object get_21_Datum_thumbnail_url(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.thumbnail_url;
        }
        private void set_21_Datum_thumbnail_url(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.thumbnail_url = (global::System.String)Value;
        }
        private object get_22_Datum_tag_ids(object instance)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            return that.tag_ids;
        }
        private void set_22_Datum_tag_ids(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.Datum)instance;
            that.tag_ids = (global::System.Collections.Generic.List<global::System.String>)Value;
        }
        private object get_23_StreamModel_Game_name(object instance)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            return that.Game_name;
        }
        private void set_23_StreamModel_Game_name(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            that.Game_name = (global::System.String)Value;
        }
        private object get_24_StreamModel_Id(object instance)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            return that.Id;
        }
        private void set_24_StreamModel_Id(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_25_StreamModel_User_name(object instance)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            return that.User_name;
        }
        private void set_25_StreamModel_User_name(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            that.User_name = (global::System.String)Value;
        }
        private object get_26_StreamModel_Viewer_count(object instance)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            return that.Viewer_count;
        }
        private void set_26_StreamModel_Viewer_count(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            that.Viewer_count = (global::System.Int32)Value;
        }
        private object get_27_StreamModel_Thumbnail_url(object instance)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            return that.Thumbnail_url;
        }
        private void set_27_StreamModel_Thumbnail_url(object instance, object Value)
        {
            var that = (global::Twitch_API.Model.StreamModel)instance;
            that.Thumbnail_url = (global::System.String)Value;
        }
        private object get_28_MainViewModel_SearchCommand(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MainViewModel)instance;
            return that.SearchCommand;
        }
        private object get_29_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_29_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_30_Trigger_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Trigger)instance;
            return that.Actions;
        }
        private object get_31_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_31_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_32_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_32_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_33_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_34_CallMethodAction_MethodName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.CallMethodAction)instance;
            return that.MethodName;
        }
        private void set_34_CallMethodAction_MethodName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.CallMethodAction)instance;
            that.MethodName = (global::System.String)Value;
        }
        private object get_35_CallMethodAction_TargetObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.CallMethodAction)instance;
            return that.TargetObject;
        }
        private void set_35_CallMethodAction_TargetObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.CallMethodAction)instance;
            that.TargetObject = (global::System.Object)Value;
        }
        private object get_36_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_36_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_37_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_37_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_38_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_38_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Windows.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_39_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_39_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_40_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_40_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }
        private object get_41_MediaViewModel_Login(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MediaViewModel)instance;
            return that.Login;
        }
        private void set_41_MediaViewModel_Login(object instance, object Value)
        {
            var that = (global::Twitch_API.ViewModel.MediaViewModel)instance;
            that.Login = (global::System.String)Value;
        }
        private object get_42_MediaViewModel_SelectedMedia(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MediaViewModel)instance;
            return that.SelectedMedia;
        }
        private void set_42_MediaViewModel_SelectedMedia(object instance, object Value)
        {
            var that = (global::Twitch_API.ViewModel.MediaViewModel)instance;
            that.SelectedMedia = (global::Twitch_API.Model.MediaModel)Value;
        }
        private object get_43_MediaViewModel_HomeCommand(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MediaViewModel)instance;
            return that.HomeCommand;
        }
        private object get_44_MediaViewModel_StartRecordCommand(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MediaViewModel)instance;
            return that.StartRecordCommand;
        }
        private object get_45_MediaViewModel_StopRecordCommand(object instance)
        {
            var that = (global::Twitch_API.ViewModel.MediaViewModel)instance;
            return that.StopRecordCommand;
        }
        private object get_46_SearchViewModel_streamModels(object instance)
        {
            var that = (global::Twitch_API.ViewModel.SearchViewModel)instance;
            return that.streamModels;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember xamlMember = null;
            global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Twitch_API.ViewModel.MainViewModel.SearchParam":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MainViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "SearchParam", "String");
                xamlMember.Getter = get_0_MainViewModel_SearchParam;
                xamlMember.Setter = set_0_MainViewModel_SearchParam;
                break;
            case "Twitch_API.ViewModel.MainViewModel.topGameModels":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MainViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "topGameModels", "System.Collections.ObjectModel.ObservableCollection`1<Twitch_API.Model.TopGamesModel>");
                xamlMember.Getter = get_1_MainViewModel_topGameModels;
                xamlMember.SetIsReadOnly();
                break;
            case "Twitch_API.Model.TopGamesModel.data":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.TopGamesModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "data", "System.Collections.Generic.List`1<Twitch_API.Model.TopGamesModel.Datum>");
                xamlMember.Getter = get_2_TopGamesModel_data;
                xamlMember.Setter = set_2_TopGamesModel_data;
                break;
            case "Twitch_API.Model.TopGamesModel.Datum.id":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.TopGamesModel.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "id", "String");
                xamlMember.Getter = get_3_Datum_id;
                xamlMember.Setter = set_3_Datum_id;
                break;
            case "Twitch_API.Model.TopGamesModel.Datum.name":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.TopGamesModel.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "name", "String");
                xamlMember.Getter = get_4_Datum_name;
                xamlMember.Setter = set_4_Datum_name;
                break;
            case "Twitch_API.Model.TopGamesModel.Datum.box_art_url":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.TopGamesModel.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "box_art_url", "String");
                xamlMember.Getter = get_5_Datum_box_art_url;
                xamlMember.Setter = set_5_Datum_box_art_url;
                break;
            case "Twitch_API.Model.TopGamesModel.pagination":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.TopGamesModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "pagination", "Twitch_API.Model.TopGamesModel.Pagination");
                xamlMember.Getter = get_6_TopGamesModel_pagination;
                xamlMember.Setter = set_6_TopGamesModel_pagination;
                break;
            case "Twitch_API.Model.TopGamesModel.Id":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.TopGamesModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_7_TopGamesModel_Id;
                xamlMember.Setter = set_7_TopGamesModel_Id;
                break;
            case "Twitch_API.Model.TopGamesModel.Name":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.TopGamesModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_8_TopGamesModel_Name;
                xamlMember.Setter = set_8_TopGamesModel_Name;
                break;
            case "Twitch_API.Model.TopGamesModel.Box_art_url":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.TopGamesModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Box_art_url", "String");
                xamlMember.Getter = get_9_TopGamesModel_Box_art_url;
                xamlMember.Setter = set_9_TopGamesModel_Box_art_url;
                break;
            case "Twitch_API.ViewModel.MainViewModel.streamModels":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MainViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "streamModels", "System.Collections.ObjectModel.ObservableCollection`1<Twitch_API.Model.StreamModel>");
                xamlMember.Getter = get_10_MainViewModel_streamModels;
                xamlMember.SetIsReadOnly();
                break;
            case "Twitch_API.Model.StreamModel.data":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.StreamModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "data", "System.Collections.Generic.List`1<Twitch_API.Model.Datum>");
                xamlMember.Getter = get_11_StreamModel_data;
                xamlMember.Setter = set_11_StreamModel_data;
                break;
            case "Twitch_API.Model.Datum.id":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "id", "String");
                xamlMember.Getter = get_12_Datum_id;
                xamlMember.Setter = set_12_Datum_id;
                break;
            case "Twitch_API.Model.Datum.user_id":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "user_id", "String");
                xamlMember.Getter = get_13_Datum_user_id;
                xamlMember.Setter = set_13_Datum_user_id;
                break;
            case "Twitch_API.Model.Datum.user_name":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "user_name", "String");
                xamlMember.Getter = get_14_Datum_user_name;
                xamlMember.Setter = set_14_Datum_user_name;
                break;
            case "Twitch_API.Model.Datum.game_id":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "game_id", "Int32");
                xamlMember.Getter = get_15_Datum_game_id;
                xamlMember.Setter = set_15_Datum_game_id;
                break;
            case "Twitch_API.Model.Datum.type":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "type", "String");
                xamlMember.Getter = get_16_Datum_type;
                xamlMember.Setter = set_16_Datum_type;
                break;
            case "Twitch_API.Model.Datum.title":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "title", "String");
                xamlMember.Getter = get_17_Datum_title;
                xamlMember.Setter = set_17_Datum_title;
                break;
            case "Twitch_API.Model.Datum.viewer_count":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "viewer_count", "Int32");
                xamlMember.Getter = get_18_Datum_viewer_count;
                xamlMember.Setter = set_18_Datum_viewer_count;
                break;
            case "Twitch_API.Model.Datum.started_at":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "started_at", "System.DateTime");
                xamlMember.Getter = get_19_Datum_started_at;
                xamlMember.Setter = set_19_Datum_started_at;
                break;
            case "Twitch_API.Model.Datum.language":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "language", "String");
                xamlMember.Getter = get_20_Datum_language;
                xamlMember.Setter = set_20_Datum_language;
                break;
            case "Twitch_API.Model.Datum.thumbnail_url":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "thumbnail_url", "String");
                xamlMember.Getter = get_21_Datum_thumbnail_url;
                xamlMember.Setter = set_21_Datum_thumbnail_url;
                break;
            case "Twitch_API.Model.Datum.tag_ids":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.Datum");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "tag_ids", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_22_Datum_tag_ids;
                xamlMember.Setter = set_22_Datum_tag_ids;
                break;
            case "Twitch_API.Model.StreamModel.Game_name":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.StreamModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Game_name", "String");
                xamlMember.Getter = get_23_StreamModel_Game_name;
                xamlMember.Setter = set_23_StreamModel_Game_name;
                break;
            case "Twitch_API.Model.StreamModel.Id":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.StreamModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_24_StreamModel_Id;
                xamlMember.Setter = set_24_StreamModel_Id;
                break;
            case "Twitch_API.Model.StreamModel.User_name":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.StreamModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "User_name", "String");
                xamlMember.Getter = get_25_StreamModel_User_name;
                xamlMember.Setter = set_25_StreamModel_User_name;
                break;
            case "Twitch_API.Model.StreamModel.Viewer_count":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.StreamModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Viewer_count", "Int32");
                xamlMember.Getter = get_26_StreamModel_Viewer_count;
                xamlMember.Setter = set_26_StreamModel_Viewer_count;
                break;
            case "Twitch_API.Model.StreamModel.Thumbnail_url":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.Model.StreamModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Thumbnail_url", "String");
                xamlMember.Getter = get_27_StreamModel_Thumbnail_url;
                xamlMember.Setter = set_27_StreamModel_Thumbnail_url;
                break;
            case "Twitch_API.ViewModel.MainViewModel.SearchCommand":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MainViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "SearchCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_28_MainViewModel_SearchCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_29_Interaction_Behaviors;
                xamlMember.Setter = set_29_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactivity.Trigger.Actions":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_Trigger_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_31_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_32_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_33_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.CallMethodAction.MethodName":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.CallMethodAction");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "MethodName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_CallMethodAction_MethodName;
                xamlMember.Setter = set_34_CallMethodAction_MethodName;
                break;
            case "Microsoft.Xaml.Interactions.Core.CallMethodAction.TargetObject":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.CallMethodAction");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "TargetObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_CallMethodAction_TargetObject;
                xamlMember.Setter = set_35_CallMethodAction_TargetObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_InvokeCommandAction_Command;
                xamlMember.Setter = set_36_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_37_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "InputConverter", "Windows.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_38_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_39_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_40_InvokeCommandAction_InputConverterLanguage;
                break;
            case "Twitch_API.ViewModel.MediaViewModel.Login":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MediaViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "Login", "String");
                xamlMember.Getter = get_41_MediaViewModel_Login;
                xamlMember.Setter = set_41_MediaViewModel_Login;
                break;
            case "Twitch_API.ViewModel.MediaViewModel.SelectedMedia":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MediaViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "SelectedMedia", "Twitch_API.Model.MediaModel");
                xamlMember.Getter = get_42_MediaViewModel_SelectedMedia;
                xamlMember.Setter = set_42_MediaViewModel_SelectedMedia;
                break;
            case "Twitch_API.ViewModel.MediaViewModel.HomeCommand":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MediaViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "HomeCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_43_MediaViewModel_HomeCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Twitch_API.ViewModel.MediaViewModel.StartRecordCommand":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MediaViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "StartRecordCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_44_MediaViewModel_StartRecordCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Twitch_API.ViewModel.MediaViewModel.StopRecordCommand":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.MediaViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "StopRecordCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_45_MediaViewModel_StopRecordCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Twitch_API.ViewModel.SearchViewModel.streamModels":
                userType = (global::Twitch_API.Twitch_API_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Twitch_API.ViewModel.SearchViewModel");
                xamlMember = new global::Twitch_API.Twitch_API_XamlTypeInfo.XamlMember(this, "streamModels", "System.Collections.ObjectModel.ObservableCollection`1<Twitch_API.Model.StreamModel>");
                xamlMember.Getter = get_46_SearchViewModel_streamModels;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Twitch_API.Twitch_API_XamlTypeInfo.XamlSystemBaseType
        , global::Windows.UI.Xaml.Markup.IXamlType2
    {
        global::Twitch_API.Twitch_API_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;
        global::Windows.UI.Xaml.Markup.IXamlType _boxedType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Twitch_API.Twitch_API_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        public global::Windows.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Windows.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Twitch_API.Twitch_API_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Twitch_API.Twitch_API_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

